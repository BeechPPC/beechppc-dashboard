name: Send Daily Google Ads Report

on:
  schedule:
    # Run at 11:00 AM Melbourne time
    # Melbourne is typically UTC+10 (AEST) or UTC+11 (AEDT)
    # Using UTC+10 (1:00 AM UTC) as the primary schedule
    # This covers most of the year when Melbourne is in AEST
    - cron: '0 1 * * *'
  
  # Allow manual trigger from Actions tab
  workflow_dispatch:

jobs:
  send-report:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Melbourne Time
        run: |
          echo "üïê Current time in Melbourne:"
          TZ='Australia/Melbourne' date
          echo "üïê Current UTC time:"
          date -u
          echo "üìÖ Today's date:"
          TZ='Australia/Melbourne' date '+%Y-%m-%d %H:%M:%S %Z'
        
      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.VERCEL_URL }}" ]; then
            echo "‚ùå VERCEL_URL secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.EMAIL_TO }}" ]; then
            echo "‚ùå EMAIL_TO secret is not set"
            exit 1
          fi
          
          # Validate URL format
          if [[ ! "${{ secrets.VERCEL_URL }}" =~ ^https?:// ]]; then
            echo "‚ùå VERCEL_URL must start with http:// or https://"
            echo "Current value: ${{ secrets.VERCEL_URL }}"
            exit 1
          fi
          
          # Remove trailing slash if present
          VERCEL_URL_CLEAN="${{ secrets.VERCEL_URL }}"
          VERCEL_URL_CLEAN="${VERCEL_URL_CLEAN%/}"
          
          echo "‚úÖ All secrets are configured"
          echo "Vercel URL: $VERCEL_URL_CLEAN"
          echo "Email to: ${{ secrets.EMAIL_TO }}"
        
      - name: Send Daily Report
        run: |
          echo "üöÄ Sending daily report..."
          
          # Follow redirects and handle 308 redirects properly
          response=$(curl -s -w "\n%{http_code}" -L -X POST "${{ secrets.VERCEL_URL }}/api/reports/send" \
            -H "Content-Type: application/json" \
            -d '{"recipients": ["${{ secrets.EMAIL_TO }}"]}')
          
          # Extract HTTP status code (last line)
          http_code=$(echo "$response" | tail -n1)
          # Extract response body (all but last line)
          response_body=$(echo "$response" | head -n -1)
          
          echo "HTTP Status: $http_code"
          echo "Response: $response_body"
          
          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ Report sent successfully"
          else
            echo "‚ùå Report failed with status $http_code"
            echo "Response: $response_body"
            echo ""
            echo "üîç Troubleshooting tips:"
            echo "1. Check that VERCEL_URL includes https://"
            echo "2. Ensure the URL doesn't have a trailing slash"
            echo "3. Verify your Vercel deployment is running"
            echo "4. Test the URL manually: curl ${{ secrets.VERCEL_URL }}/api/reports/send"
            exit 1
          fi
        
      - name: Report Success
        if: success()
        run: echo "‚úÖ Daily report sent successfully to ${{ secrets.EMAIL_TO }}"
        
      - name: Report Failure
        if: failure()
        run: |
          echo "‚ùå Failed to send daily report"
          echo "Check the following:"
          echo "1. VERCEL_URL secret is set correctly"
          echo "2. EMAIL_TO secret is set correctly"
          echo "3. Vercel deployment is running"
          echo "4. API endpoint is accessible"

# Required GitHub Secrets:
# - VERCEL_URL: Your Vercel deployment URL (e.g., https://your-app.vercel.app)
# - EMAIL_TO: Recipient email address (e.g., chris@beechppc.com)
